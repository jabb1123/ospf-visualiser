= Visualiser of OSPF network routers =

== Describe ==
Java desktop application for visualize network of OSPF routers and more functions with network.
You can find more info in wiki pages ([http://code.google.com/p/ospf-visualiser/wiki/changelog_cs cs], [http://code.google.com/p/ospf-visualiser/wiki/changelog_en en]).

== Screenshots ==
<img src="http://ospf-visualiser.googlecode.com/files/scn01.png" />

<img src="http://ospf-visualiser.googlecode.com/files/scn02.png" />



#summary Overview of versions and application requirements

= Installation and running =
For running application is needed Java JRE >= 1.6.
How to:
  * download file ospfVERZE.jar and run it
  * running from command line: <code>java -jar ospfVERZE.jar</code>

= Version =

== ospf3.0.1 ==
  * layout correction (failure results of links/routers)
  * label correction
  * correction of loading data via telnet
  * correction of open/save NML file dialog 
  * correction of side pannel in state map
  * possibility of select all/none in load logs dialo
  * FR layout for map of routers
    * faster, lower CPU requirements
  * searching for suffix of routers name (the most occurence of string is used) - only for data loaded via telnet

== ospf3.0.0 ==
  * cs/en translation completed 
  * searching in map of routers
    * CTRL+f set focus on the input field for searched string
    * use symbol | for separate more searched strings
    * looking for the name of the router which contains the search string
    * found routers are highlighted by green color and its label by blue color

== ospf3.0.0rc ==
  * language settings
  * cs/en partial translation
  * connect to router via telnet, options:
    * router address, port, password
    * timeout (how long will application try to connect to router)
    * rDNS server - address of server for reverse DNS (determination of a domain name that is associated with a IP address)
  * export to xgmml file for import to Cytoscape and work with it
  * redesign to use dynamic layout in application GUI - correct display in Linux/Windows
  * save file with application settings into home folder
    * when you first start application the settings.properties file is created in your home folder in .ospf-visualiser folder (language settings is set by system)
    * when you confirm dialog for loading logs/model data the values you typed are saved
    * when you confirm dialog for loading model data the way of loading data is saved

Screenshot from Cytoscape with loaded model:
<img src="http://ospf-visualiser.googlecode.com/files/scn_cytoscape.png" />

== older versions ==
Older versions were described here: http://lab.hkfree.org/ospfmap/